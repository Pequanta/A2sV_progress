# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:
        if l1.val == 0 and l1.next is None:
            return l2
        elif l2.val == 0 and l2.next is None:
            return l1
        else:
            s = l1.val + l2.val
            carry = s // 10
            s %= 10
            head = ListNode(val = s)
            tail = head
            l1= l1.next
            l2 = l2.next
            while l1 is not None or l2 is not None:  
                s = carry
                if l1 is not None:
                    s += l1.val
                    l1 = l1.next
                if l2 is not None:
                    s += l2.val
                    l2 = l2.next
                carry = s // 10
                new_node = ListNode(val = s % 10)
                tail.next = new_node
                tail = new_node
            if carry != 0:
                tail.next = ListNode(val = carry)
                tail = tail.next   
            return head
                
        
