/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode current = head;
        ListNode previous = null;
        int count = 0;
        boolean found = false;
        int size = 0;
        while(current  != null){
            size++;
            current = current.next;
        }
        current = head;
        while(current != null && !found){
            if((size - count) == n){
                found = true;
            }
            else{
                previous = current;
                current = current.next;
            }
            count++;
        }
        if(previous == null){
            head = head.next;
        }
        else if(current == null){
            previous.next = null;
        }
        else{
            previous.next = current.next;
        }
        return head;
    }
}
